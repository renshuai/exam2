(function(e){function n(n){for(var r,l,a=n[0],s=n[1],u=n[2],m=0,b=[];m<a.length;m++)l=a[m],Object.prototype.hasOwnProperty.call(o,l)&&o[l]&&b.push(o[l][0]),o[l]=0;for(r in s)Object.prototype.hasOwnProperty.call(s,r)&&(e[r]=s[r]);c&&c(n);while(b.length)b.shift()();return i.push.apply(i,u||[]),t()}function t(){for(var e,n=0;n<i.length;n++){for(var t=i[n],r=!0,a=1;a<t.length;a++){var s=t[a];0!==o[s]&&(r=!1)}r&&(i.splice(n--,1),e=l(l.s=t[0]))}return e}var r={},o={app:0},i=[];function l(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,l),t.l=!0,t.exports}l.m=e,l.c=r,l.d=function(e,n,t){l.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},l.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,n){if(1&n&&(e=l(e)),8&n)return e;if(4&n&&"object"===typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(l.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)l.d(t,r,function(n){return e[n]}.bind(null,r));return t},l.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return l.d(n,"a",n),n},l.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},l.p="/";var a=window["webpackJsonp"]=window["webpackJsonp"]||[],s=a.push.bind(a);a.push=n,a=a.slice();for(var u=0;u<a.length;u++)n(a[u]);var c=s;i.push([0,"chunk-vendors"]),t()})({0:function(e,n,t){e.exports=t("56d7")},"034f":function(e,n,t){"use strict";var r=t("85ec"),o=t.n(r);o.a},"56d7":function(e,n,t){"use strict";t.r(n);t("e260"),t("e6cf"),t("cca6"),t("a79d");var r=t("2b0e"),o=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{attrs:{id:"app"}},[t("div",{attrs:{id:"nav"}},[t("router-link",{attrs:{to:"/"}},[e._v("音乐专辑管理")]),e._v(" | "),t("router-link",{attrs:{to:"/spider"}},[e._v("“爬取模块”")]),e._v(" | "),t("router-link",{attrs:{to:"/save"}},[e._v("存储模块")]),e._v(" | "),t("router-link",{attrs:{to:"/mocha"}},[e._v("测试程序")]),e._v(" | "),t("router-link",{attrs:{to:"/api"}},[e._v("音乐专辑各rest接口的测试地址")])],1),t("router-view")],1)},i=[],l=(t("034f"),t("2877")),a={},s=Object(l["a"])(a,o,i,!1,null,null,null),u=s.exports,c=t("8c4f"),m=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("el-dialog",{attrs:{title:"提示",visible:e.dialogVisible,width:"30%","before-close":e.handleClose},on:{"update:visible":function(n){e.dialogVisible=n}}},[t("span",[e._v("这是一段信息")]),t("span",{staticClass:"dialog-footer",attrs:{slot:"footer"},slot:"footer"},[t("el-button",{on:{click:function(n){e.dialogVisible=!1}}},[e._v("取 消")]),t("el-button",{attrs:{type:"primary"},on:{click:function(n){e.dialogVisible=!1}}},[e._v("确 定")])],1)]),t("el-dialog",{attrs:{title:"专辑详情",visible:e.isShowDetailDialog},on:{"update:visible":function(n){e.isShowDetailDialog=n}}},[e.currentAlbum?t("div",{staticClass:"detail-block"},[t("div",{staticClass:"detail-property-block"},[t("img",{attrs:{src:e.currentAlbum.cover}})]),t("div",{staticClass:"detail-property-block"},[t("span",[e._v("相册id")]),t("el-input",{attrs:{placeholder:"请输入内容",disabled:!e.editable},model:{value:e.currentAlbum["album_id"],callback:function(n){e.$set(e.currentAlbum,"album_id",n)},expression:"currentAlbum['album_id']"}})],1),t("div",{staticClass:"detail-property-block"},[t("span",[e._v("专辑名称")]),t("el-input",{attrs:{placeholder:"请输入内容",disabled:!e.editable},model:{value:e.currentAlbum["album_name"],callback:function(n){e.$set(e.currentAlbum,"album_name",n)},expression:"currentAlbum['album_name']"}})],1),t("div",{staticClass:"detail-property-block"},[t("span",[e._v("价格")]),t("el-input",{attrs:{placeholder:"请输入内容",disabled:!e.editable},model:{value:e.currentAlbum["price"],callback:function(n){e.$set(e.currentAlbum,"price",n)},expression:"currentAlbum['price']"}})],1),t("div",{staticClass:"detail-property-block"},[t("span",[e._v("歌手名称")]),t("el-input",{attrs:{placeholder:"请输入内容",disabled:"false"},model:{value:e.currentAlbum["singers"],callback:function(n){e.$set(e.currentAlbum,"singers",n)},expression:"currentAlbum['singers']"}})],1)]):e._e(),t("div",{staticClass:"dialog-footer",attrs:{slot:"footer"},slot:"footer"},[e.editable?t("el-button",{on:{click:function(n){e.isShowDetailDialog=!1}}},[e._v("取 消")]):e._e(),t("el-button",{attrs:{type:"primary"},on:{click:e.showConfirm}},[e._v("确 定")])],1)]),t("h1",[e._v("Book Manager")]),t("el-form",{staticClass:"demo-form-inline",attrs:{inline:!0,model:e.book}},[t("el-form-item",{attrs:{label:"专辑名称"}},[t("el-input",{attrs:{placeholder:"请输入书名"},model:{value:e.currentAlbum["album_name"],callback:function(n){e.$set(e.currentAlbum,"album_name",n)},expression:"currentAlbum['album_name']"}})],1),t("el-form-item",{attrs:{label:"专辑价格"}},[t("el-input",{attrs:{type:"number",placeholder:"请输入价格"},model:{value:e.currentAlbum["price"],callback:function(n){e.$set(e.currentAlbum,"price",e._n(n))},expression:"currentAlbum['price']"}})],1),t("el-form-item",{attrs:{label:"发布时间"}},[t("el-date-picker",{attrs:{type:"date",placeholder:"选择日期"},model:{value:e.date,callback:function(n){e.date=n},expression:"date"}})],1),t("el-form-item",[t("el-button",{attrs:{type:"primary"},on:{click:e.addAlbum}},[e._v("添加专辑")])],1)],1),e.albums.length?t("el-table",{staticStyle:{width:"80%"},attrs:{data:e.albums}},[t("el-table-column",{attrs:{prop:"_id",label:"Id",width:"180"}}),t("el-table-column",{attrs:{prop:"album_id",label:"album_id",width:"180"}}),t("el-table-column",{attrs:{prop:"album_name",label:"专辑名",width:"300"}}),t("el-table-column",{attrs:{prop:"price",label:"价格"}}),t("el-table-column",{attrs:{prop:"singer",label:"歌手名"}}),t("el-table-column",{attrs:{fixed:"right",label:"操作",width:"100"},scopedSlots:e._u([{key:"default",fn:function(n){return[t("el-button",{attrs:{type:"text",size:"small"},on:{click:function(t){return e.showAlbumDialog(n.row)}}},[e._v("详细内容")]),t("el-button",{attrs:{type:"text",size:"small"},on:{click:function(t){return e.editAlbum(n.row)}}},[e._v("编辑")]),t("el-button",{attrs:{type:"text",size:"small"},on:{click:function(t){return e.deleteAlbum(n.row)}}},[e._v("删除")])]}}],null,!1,2350943739)})],1):e._e()],1)},b=[],p=(t("99af"),t("c740"),t("13d5"),t("a434"),t("d3b7"),{name:"BookManger",data:function(){return{maxId:2,book:{name:"",price:""},dialogVisible:!1,books:[],albums:[],baseUrl:"/albums",isShowDetailDialog:!1,currentAlbum:null,editable:!0,type:"preview",date:null}},created:function(){var e=this;this.initCurrentAlbum(),fetch(this.baseUrl,{type:"GET"}).then((function(e){return e.json()})).then((function(n){return e.albums=n,console.log(n),n})).catch((function(e){alert(e)}))},methods:{showAlbumDialog:function(e){this.currentAlbum=e,this.isShowDetailDialog=!0,this.editable=!1,this.type="preview"},initCurrentAlbum:function(){this.currentAlbum={album_id:"",album_name:"",public_time:"",week:0,price:0,cover:"",singers:[]}},editAlbum:function(e){this.currentAlbum=e,this.isShowDetailDialog=!0,this.editable=!0,this.type="edit"},showConfirm:function(){var e=this;if(this.editable){var n={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(this.currentAlbum)};fetch(this.baseUrl+"/update",n).then((function(e){return e.json()})).then((function(n){e.albums.push(n)})).catch((function(e){alert(e)}))}else this.isShowDetailDialog=!1},deleteAlbum:function(e){var n=this;this.$confirm("确定要删除该专辑吗","专辑删除",{confirmButtonText:"确定",cancelButtonText:"取消"}).then((function(){var t={method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json"}};fetch("".concat(n.baseUrl,"/").concat(e._id),t).then((function(e){return e.json()})).then((function(t){console.log(t);var r=n.albums.findIndex((function(n){return n._id==e._id}));n.albums.splice(r,1)})).catch((function(e){alert(e)}))})).catch((function(){console.log("已取消删除")}))},addAlbum:function(){var e=this;this.type="add";var n={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(this.currentAlbum)};fetch(this.baseUrl+"/add",n).then((function(e){return e.json()})).then((function(n){e.albums.push(n),e.$message({showClose:!0,message:"专辑添加成功"})})).catch((function(e){alert(e)}))},handleClose:function(){},updateAlbum:function(){var e={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(this.currentAlbum)};fetch(this.baseUrl,e).then((function(e){return e.json()})).then((function(e){console.log(e)})).catch((function(e){alert(e)}))}},computed:{priceTotal:function(){return this.books.reduce((function(e,n){return e+n.price}),0)}}}),d=p,f=(t("5c74"),Object(l["a"])(d,m,b,!1,null,"4e99f882",null)),h=f.exports,_=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("pre",[e._v("\n    const http = require('http');\n\n    function request(options, callback) {\n        const req = http.request(options);\n        req.end();\n\n        req.on('response', (info) => {\n            info.on('data',function (chunk) {\n                callback(null, chunk.toString());\n            })\n        });\n\n        req.on('error', (err) => {\n            callback(err)\n        })\n    }\n\n    module.exports = {request};\n")])},v=[],g={name:"spider"},k=g,y=Object(l["a"])(k,_,v,!1,null,"6263b100",null),A=y.exports,w=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("pre",[e._v("\n    //dao/BookDao.js v1\n    const mogoose=require('mongoose')\n\n    let albumsModel=mogoose.model(\"albums\");\n    function addAlbums(albums,callback) {\n        albumsModel.create(albums,function (err,newAlbums) {\n            console.log(newAlbums);\n            console.log(err);\n            if(!err) {\n                callback(null, newAlbums)\n            }\n        })\n    }\n    module.exports={addAlbums}\n\n")])},j=[],x={name:"save"},D=x,q=Object(l["a"])(D,w,j,!1,null,"0c3f057c",null),S=q.exports,O=function(){var e=this,n=e.$createElement;e._self._c;return e._m(0)},C=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[t("h1",[e._v("测试AlbumsDao")]),t("pre",[e._v('        const mongoose=require(\'mongoose\')\n    require(\'../model/index\')\n    let albumsDao=require(\'../dao/index\');\n    const assert=require(\'assert\')\n\n    describe("测试AlbumsDao",function () {\n        before(function () {\n            mongoose.connect(\'mongodb://39.98.54.111/mydb\',function (err) {\n\n            })\n        })\n        after(function () {\n            mongoose.disconnect()\n        })\n\n        it("测试添加所有专辑",function (done) {\n            let albums = [\n                {\n                    "album_id": "3751508",\n                    "album_name": "A.I. 爱",\n                    "public_time": "2017-12-11",\n                    "week": 50,\n                    "price": 89,\n                    "cover": "http://imgcache.qq.com/music/photo/album_300/08/300_albumpic_3751508_0.jpg",\n                    "singers": [\n                        {\n                            "singer_id": "265",\n                            "singer_name": "王力宏"\n                        }\n                    ]\n                },\n                {\n                    "album_id": "3766916",\n                    "album_name": "Pay the Man (Remix)",\n                    "public_time": "2017-12-13",\n                    "week": 50,\n                    "price": 78,\n                    "cover": "http://imgcache.qq.com/music/photo/album_300/16/300_albumpic_3766916_0.jpg",\n                    "singers": [\n                        {\n                            "singer_id": "28132",\n                            "singer_name": "Foster The People"\n                        },\n                        {\n                            "singer_id": "191884",\n                            "singer_name": "J.I.D"\n                        },\n                        {\n                            "singer_id": "173561",\n                            "singer_name": "Saba"\n                        }\n                    ]\n                },\n                {\n                    "album_id": "3327203",\n                    "album_name": "Dreamer (梦想家)",\n                    "public_time": "2017-12-08",\n                    "week": 49,\n                    "price": 102,\n                    "cover": "http://imgcache.qq.com/music/photo/album_300/03/300_albumpic_3327203_0.jpg",\n                    "singers": [\n                        {\n                            "singer_id": "941206",\n                            "singer_name": "Axwell Λ Ingrosso"\n                        },\n                        {\n                            "singer_id": "159855",\n                            "singer_name": "Trevor Guthrie"\n                        }\n                    ]\n                },\n                {\n                    "album_id": "3766915",\n                    "album_name": "Don\'t Don\'t Do It!",\n                    "public_time": "2017-12-13",\n                    "week": 50,\n                    "price": 65,\n                    "cover": "http://imgcache.qq.com/music/photo/album_300/15/300_albumpic_3766915_0.jpg",\n                    "singers": [\n                        {\n                            "singer_id": "13317",\n                            "singer_name": "N.E.R.D"\n                        },\n                        {\n                            "singer_id": "28021",\n                            "singer_name": "Kendrick Lamar (肯德里克·拉马尔)"\n                        }\n                    ]\n                },\n                {\n                    "album_id": "3324740",\n                    "album_name": "Trigger Bang",\n                    "public_time": "2018-01-05",\n                    "week": 1,\n                    "price": 123,\n                    "cover": "http://imgcache.qq.com/music/photo/album_300/40/300_albumpic_3324740_0.jpg",\n                    "singers": [\n                        {\n                            "singer_id": "5125",\n                            "singer_name": "Lily Allen (莉莉·艾伦)"\n                        },\n                        {\n                            "singer_id": "49917",\n                            "singer_name": "Giggs"\n                        }\n                    ]\n                }\n            ];\n            albumsDao.addAlbums(albums,function (err, newAlbums) {\n                assert.ok(!err)\n                done()\n            })\n        })\n\n    })\n\n    ')]),t("h1",[e._v("测试爬虫")]),t("pre",[e._v("        const spider = require('../spider/index');\n        const assert=require('assert')\n\n        describe(\"测试爬虫\",function () {\n            before(function () {\n\n            })\n            after(function () {\n\n            })\n\n            it(\"测试request\",function (done) {\n                const options = {\n                    host: 'johnyu.cn',\n                    port: 3000,\n                    path: '/albums'\n                };\n                spider.request(options, function (err, albums) {\n                    assert(!err);\n                })\n                done();\n            })\n\n\n        })\n    ")])])}],T={name:"save"},$=T,P=Object(l["a"])($,O,C,!1,null,"2db462d2",null),E=P.exports;r["default"].use(c["a"]);var M=[{path:"/",name:"bookManager",component:h},{path:"/spider",name:"Spider",component:A},{path:"/save",name:"save",component:S},{path:"/mocha",name:"MochaTest",component:E}],I=new c["a"]({mode:"hash",base:"/",routes:M}),B=I,J=t("5c96"),U=t.n(J);t("0fae");r["default"].config.productionTip=!1,r["default"].use(U.a),new r["default"]({router:B,render:function(e){return e(u)}}).$mount("#app")},5953:function(e,n,t){},"5c74":function(e,n,t){"use strict";var r=t("5953"),o=t.n(r);o.a},"85ec":function(e,n,t){}});
//# sourceMappingURL=app.3998a77e.js.map